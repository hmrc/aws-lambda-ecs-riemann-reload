#!/usr/bin/env groovy
node {
  withCredentials(
      [[$class: 'UsernamePasswordMultiBinding',
        credentialsId: 'hmrc-githubcom-service-infra-user-and-pat',
        usernameVariable: 'GIT_USERNAME',
        passwordVariable: 'GIT_PERSONAL_ACCESS_TOKEN'
      ]]
    ) {
    stage('git checkout') {
      step([$class: 'WsCleanup'])
      checkout(scm)
    }
    stage('Build Poetry Docker Image') {
      sh("""#!/usr/bin/env bash
            set -ue
            ./bin/build-docker-image.sh""")
    }
    stage('Prepare Python Environment') {
      sh("""#!/usr/bin/env bash
            set -ue
            ./bin/run-in-docker.sh poetry install""")
    }
    stage('Verify (Run tests, lint, check vulnerabilities etc)') {
      sh("""#!/usr/bin/env bash
            # Don't set -e as verify will return a non zero exit code in case of vulnerabilities.
            set -u
            SAM_USE_CONTAINER="" \
            SKIP_FUNCTEST=true \
            ./bin/run-in-docker.sh poetry run task verify""")
    }
  }
}
